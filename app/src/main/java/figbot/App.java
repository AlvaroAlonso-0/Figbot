/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package figbot;

import com.github.philippheuer.credentialmanager.domain.OAuth2Credential;
import com.github.philippheuer.events4j.core.EventManager;
import com.github.philippheuer.events4j.simple.SimpleEventHandler;
import com.github.twitch4j.TwitchClient;
import com.github.twitch4j.TwitchClientBuilder;
import com.github.twitch4j.chat.events.channel.ChannelMessageEvent;

import jade.core.Runtime;
import jade.wrapper.AgentContainer;
import jade.wrapper.AgentController;
import jade.wrapper.StaleProxyException;
import jade.core.Profile;
import jade.core.ProfileImpl;

public class App extends SimpleEventHandler{

    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {

        Runtime runtime = jade.core.Runtime.instance();
        Profile profile = new ProfileImpl();
        AgentContainer container = runtime.createMainContainer(profile);
        Object argsAgentPercepcion[] = {"rayo106"};
        Object argsAgentProcesador[] = null;
        try{
            AgentController percepcion = container.createNewAgent("percepcion", "agents.PerceptionAgent", argsAgentPercepcion);
            AgentController emotion = container.createNewAgent("procesadorEmotions", "agents.EmotionsProcessAgent", argsAgentProcesador);
            AgentController command = container.createNewAgent("procesadorCommand", "agents.CommandProcessAgent", argsAgentProcesador);
            AgentController caps = container.createNewAgent("procesadorCaps", "agents.CapsProcessAgent", argsAgentProcesador);
            AgentController display = container.createNewAgent("visualizacion", "agents.DisplayAgent", argsAgentProcesador);
            AgentController helix = container.createNewAgent("moderador", "agents.HelixAgent", argsAgentPercepcion);
            percepcion.start();
            //emotion.start();
            command.start();
            caps.start();
            display.start();
            helix.start();
        } catch(StaleProxyException e){
            e.printStackTrace();
        }
    }
}
