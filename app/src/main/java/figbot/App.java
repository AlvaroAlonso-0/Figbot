/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package figbot;

//TODO borrar
/*
import jade.core.Runtime;
import jade.wrapper.AgentContainer;
import jade.wrapper.AgentController;
import jade.wrapper.StaleProxyException;
import jade.core.Profile;
import jade.core.ProfileImpl;*/

import controller.Controller;

public class App{

    private static Controller controller;

    public static Controller getController(){
        return controller;
    }

    public static void main(String[] args) {
        controller = new Controller();
        //TODO borrar
        /*
        Runtime runtime = jade.core.Runtime.instance();
        Profile profile = new ProfileImpl();
        AgentContainer container = runtime.createMainContainer(profile);
        Object argsAgentPercepcion[] = new Object[1];
        argsAgentPercepcion[0] = controller.getChannelName();
        Object argsAgentProcesador[] = null;
        try{
            AgentController percepcion = container.createNewAgent("percepcion", "agents.PerceptionAgent", argsAgentPercepcion);
            AgentController command = container.createNewAgent("procesadorCommand", "agents.CommandProcessAgent", argsAgentProcesador);
            AgentController caps = container.createNewAgent("procesadorCaps", "agents.CapsProcessAgent", argsAgentProcesador);
            AgentController display = container.createNewAgent("visualizacion", "agents.DisplayAgent", argsAgentProcesador);

            if(controller.getModeration()){
                AgentController emotion = container.createNewAgent("procesadorEmotions", "agents.EmotionsProcessAgent", argsAgentProcesador);
                AgentController helix = container.createNewAgent("moderador", "agents.HelixAgent", argsAgentPercepcion);
                emotion.start();
                helix.start();
            }

            percepcion.start();
            command.start();
            caps.start();
            display.start();
        } catch(StaleProxyException e){
            e.printStackTrace();
        }*/
    }
}
